# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Legacy_DiseaseInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('trait', models.CharField(max_length=100)),
                ('disease_name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=100)),
                ('topic', models.CharField(max_length=100)),
                ('disease_info', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Experiment',
            fields=[
                ('experiment_id', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('location', models.CharField(max_length=100)),
                ('planting_date', models.CharField(max_length=100)),
                ('tissue_collection', models.CharField(max_length=100)),
                ('inoculations', models.CharField(max_length=100)),
                ('inoculation_date1', models.CharField(max_length=100)),
                ('inoculation_date2', models.CharField(max_length=100)),
                ('inoculation_date3', models.CharField(max_length=100)),
                ('pathogen_isolate', models.CharField(max_length=100)),
                ('harvest_date', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('notes', models.CharField(max_length=1000)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Genotype',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('genotype_plate_id', models.CharField(max_length=100)),
                ('genotype_well_id', models.CharField(max_length=100)),
                ('genotype_plate_name', models.CharField(max_length=100)),
                ('well_A01', models.CharField(max_length=100)),
                ('well_01A', models.CharField(max_length=100)),
                ('plate_size', models.CharField(max_length=100)),
                ('dna_id', models.CharField(max_length=100)),
                ('sample_id', models.CharField(max_length=100)),
                ('locus_name', models.CharField(max_length=100)),
                ('marker_id', models.CharField(max_length=100)),
                ('marker_name', models.CharField(max_length=100)),
                ('marker_type', models.CharField(max_length=100)),
                ('f_primer_id', models.CharField(max_length=100)),
                ('r_primer_id', models.CharField(max_length=100)),
                ('f2_primer_id', models.CharField(max_length=100)),
                ('r2_primer_id', models.CharField(max_length=100)),
                ('label_color', models.CharField(max_length=100)),
                ('value1', models.CharField(max_length=100)),
                ('value2', models.CharField(max_length=100)),
                ('value3', models.CharField(max_length=100)),
                ('value4', models.CharField(max_length=100)),
                ('passive_ref', models.CharField(max_length=100)),
                ('quality_value', models.CharField(max_length=100)),
                ('call_type', models.CharField(max_length=100)),
                ('call_name', models.CharField(max_length=100)),
                ('genotype', models.CharField(max_length=100)),
                ('brc_plate_num', models.CharField(max_length=100)),
                ('brc_sample_num', models.CharField(max_length=100)),
                ('genotype_file', models.CharField(max_length=100)),
                ('run_date', models.CharField(max_length=100)),
                ('genotype_person_id', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Isolate',
            fields=[
                ('ID', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('isolate_id', models.CharField(max_length=100)),
                ('isolate_name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(max_length=100)),
                ('other_sname', models.CharField(max_length=100)),
                ('pathotype_race', models.CharField(max_length=100)),
                ('mating_type', models.CharField(max_length=100)),
                ('disease_common_name', models.CharField(max_length=100)),
                ('collection_site', models.CharField(max_length=100)),
                ('collection_date', models.CharField(max_length=100)),
                ('plant_organ', models.CharField(max_length=100)),
                ('collector', models.CharField(max_length=100)),
                ('provider', models.CharField(max_length=100)),
                ('glycerol_stock_n80c', models.CharField(max_length=100)),
                ('mycelium_4c', models.CharField(max_length=100)),
                ('cite', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=1000)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Markers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('id_placeholder', models.CharField(max_length=100)),
                ('marker_id', models.CharField(max_length=100)),
                ('locus_name', models.CharField(max_length=100)),
                ('chromosome', models.CharField(max_length=100)),
                ('maize_bin', models.CharField(max_length=100)),
                ('map_physical', models.CharField(max_length=100)),
                ('map_physical_refgen_v1', models.CharField(max_length=100)),
                ('map_physical_refgen_v2', models.CharField(max_length=100)),
                ('map_physical_refgen_v3', models.CharField(max_length=100)),
                ('bac', models.CharField(max_length=100)),
                ('nam_marker', models.CharField(max_length=100)),
                ('map_IBM2n_cM', models.CharField(max_length=100)),
                ('polymorphism_type', models.CharField(max_length=100)),
                ('snp_type', models.CharField(max_length=100)),
                ('sequence_f1', models.CharField(max_length=100)),
                ('sequence_f2', models.CharField(max_length=100)),
                ('sequence_r1', models.CharField(max_length=100)),
                ('sequence_r2', models.CharField(max_length=100)),
                ('primer_name_f1', models.CharField(max_length=100)),
                ('primer_name_f2', models.CharField(max_length=100)),
                ('primer_name_r1', models.CharField(max_length=100)),
                ('primer_name_r2', models.CharField(max_length=100)),
                ('primer_tail', models.CharField(max_length=100)),
                ('size_range', models.CharField(max_length=100)),
                ('Tm_min', models.CharField(max_length=100)),
                ('Tm_max', models.CharField(max_length=100)),
                ('chemestry', models.CharField(max_length=100)),
                ('primer_person', models.CharField(max_length=100)),
                ('order_date', models.CharField(max_length=100)),
                ('consense_sequence', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
                ('reference_B73', models.CharField(max_length=100)),
                ('reference_Mo17', models.CharField(max_length=100)),
                ('reference_CML52', models.CharField(max_length=100)),
                ('reference_DK888', models.CharField(max_length=100)),
                ('reference_S11', models.CharField(max_length=100)),
                ('reference_XL380', models.CharField(max_length=100)),
                ('reference_Tx303', models.CharField(max_length=100)),
                ('MaizeGDBLink', models.CharField(max_length=100)),
                ('MaizeSeqLink', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_People',
            fields=[
                ('person_id', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('person_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('fax', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('URL', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
                ('peopleorg_id', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Phenotype',
            fields=[
                ('phenotype_id', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('entity_id', models.CharField(max_length=100)),
                ('entity_type', models.CharField(max_length=100)),
                ('entity_name', models.CharField(max_length=100)),
                ('experiment_id', models.CharField(max_length=100)),
                ('trait_id', models.CharField(max_length=100)),
                ('phenotype_value', models.CharField(max_length=100)),
                ('phenotype_date', models.CharField(max_length=100)),
                ('plate_id', models.CharField(max_length=100)),
                ('phenotype_person_id', models.CharField(max_length=100)),
                ('scoring_order', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
                ('changed', models.CharField(max_length=100)),
                ('technical_rep', models.CharField(max_length=100)),
                ('biological_rep', models.CharField(max_length=100)),
                ('trait_id_buckler', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Plant',
            fields=[
                ('plant_id', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('row_id', models.CharField(max_length=100)),
                ('plant_name', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Row',
            fields=[
                ('row_id', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('row_name', models.CharField(max_length=100)),
                ('pedigree', models.CharField(max_length=100)),
                ('line_num', models.CharField(max_length=100)),
                ('source_seed_id', models.CharField(default=b'0', max_length=100)),
                ('source_seed_name', models.CharField(max_length=100)),
                ('range_num', models.CharField(max_length=100)),
                ('plot', models.CharField(max_length=100)),
                ('block', models.CharField(max_length=100)),
                ('rep_num', models.CharField(max_length=100)),
                ('kernel_num', models.CharField(max_length=100)),
                ('pop', models.CharField(max_length=100)),
                ('delay', models.CharField(max_length=100)),
                ('purpose', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
                ('row_person', models.CharField(max_length=100)),
                ('experiment_id', models.ForeignKey(to='legacy.Legacy_Experiment')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Seed',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('seed_id', models.CharField(unique=True, max_length=100)),
                ('plant_id_origin', models.CharField(max_length=100)),
                ('row_id_origin', models.CharField(max_length=100)),
                ('plant_name', models.CharField(max_length=100)),
                ('row_name', models.CharField(max_length=100)),
                ('seed_name', models.CharField(max_length=100)),
                ('cross_type', models.CharField(max_length=100)),
                ('male_parent_id', models.CharField(max_length=100)),
                ('male_parent_name', models.CharField(max_length=100)),
                ('program_origin', models.CharField(max_length=100)),
                ('seed_pedigree', models.CharField(max_length=100)),
                ('line_num', models.CharField(max_length=100)),
                ('seed_person_id', models.CharField(max_length=100)),
                ('disease_info', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
                ('accession', models.CharField(max_length=100)),
                ('lot', models.CharField(max_length=100)),
                ('experiment_id_origin', models.ForeignKey(to='legacy.Legacy_Experiment')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Seed_Inventory',
            fields=[
                ('ID', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('seed_id', models.CharField(max_length=100)),
                ('seed_name', models.CharField(max_length=100)),
                ('inventory_date', models.CharField(max_length=100)),
                ('inventory_person', models.CharField(max_length=100)),
                ('seed_person_id', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
                ('weight_g', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Tissue',
            fields=[
                ('ID', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('experiment_id', models.CharField(max_length=100)),
                ('entity_id', models.CharField(max_length=100)),
                ('entity_name', models.CharField(max_length=100)),
                ('pedigree', models.CharField(max_length=100)),
                ('row_name', models.CharField(max_length=100)),
                ('plant', models.CharField(max_length=100)),
                ('tissue_type', models.CharField(max_length=100)),
                ('well', models.CharField(max_length=100)),
                ('tissue_plate_id', models.CharField(max_length=100)),
                ('comments', models.CharField(max_length=1000)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Legacy_Trait_info',
            fields=[
                ('trait_id', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('trait_grp', models.CharField(max_length=100)),
                ('trait_grp_id', models.CharField(max_length=100)),
                ('trait_name', models.CharField(max_length=100)),
                ('trait_name_id', models.CharField(max_length=100)),
                ('trait_basis', models.CharField(max_length=100)),
                ('trait_id_buckler', models.CharField(max_length=100)),
                ('trait_min', models.CharField(max_length=100)),
                ('trait_max', models.CharField(max_length=100)),
                ('data_type', models.CharField(max_length=100)),
                ('trait_howto', models.CharField(max_length=100)),
                ('trait_when', models.CharField(max_length=100)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
    ]
